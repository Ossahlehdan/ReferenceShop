package main

import (
	"net/http"

	"github.com/ReferenceShop/category"
	"github.com/ReferenceShop/product"
	"github.com/ReferenceShop/user"
)

// Route defines a route
type Route struct {
	Name    string
	Timeout bool
	Method  string
	Pattern string
	Queries []string
	Auth    bool
	Handler func(http.ResponseWriter, *http.Request) (int, string, error)
}

// BaseAPI default base Api
const BaseAPI = "/referenceshop"

// Routes is the set of routes handled by the router
type Routes []Route

var routes = Routes{
	Route{
		"GetCategories",
		false,
		"GET",
		BaseAPI + "/categories",
		nil,
		true,
		category.GetCategories,
	},
	Route{
		"AddCategory",
		false,
		"POST",
		BaseAPI + "/categories/add",
		nil,
		true,
		category.AddCategory,
	},
	Route{
		"GetCategoryById",
		false,
		"GET",
		BaseAPI + "/categories/show/{categoryId}",
		nil,
		true,
		category.GetCayegoryByID,
	},
	Route{
		"UpdateCategory",
		false,
		"PUT",
		BaseAPI + "/categories/update",
		nil,
		true,
		category.UpdateCategory,
	},
	Route{
		"DeleteCategory",
		false,
		"DELETE",
		BaseAPI + "/categories/delete/{categoryId}",
		nil,
		true,
		category.DeleteCategoryByID,
	},
	Route{
		"GetAllUsers",
		false,
		"GET",
		BaseAPI + "/users",
		nil,
		true,
		user.GetUsers,
	},
	Route{
		"CreateUser",
		false,
		"POST",
		BaseAPI + "/users/add",
		nil,
		false,
		user.CreateUser,
	},
	Route{
		"GetUser",
		false,
		"GET",
		BaseAPI + "/users/show/{userid}",
		nil,
		true,
		user.GetUser,
	},
	Route{
		"GetUserByEmailAndPwd",
		false,
		"POST",
		BaseAPI + "/users/getUserByEmailAndPwd",
		nil,
		false,
		user.GetUserByEmailAndPwd,
	},
	Route{
		"UpdateUser",
		false,
		"GET",
		BaseAPI + "/users/update",
		nil,
		true,
		user.UpdateUser,
	},
	Route{
		"DeleteUser",
		false,
		"GET",
		BaseAPI + "/users/delete/{userid}",
		nil,
		true,
		user.DeleteUser,
	},
	Route{
		"GetProducts",
		false,
		"GET",
		BaseAPI + "/products",
		nil,
		true,
		product.GetProducts,
	},
	Route{
		"AddProduct",
		false,
		"POST",
		BaseAPI + "/products/add",
		nil,
		true,
		product.AddProduct,
	},
	Route{
		"GetProductById",
		false,
		"GET",
		BaseAPI + "/products/show/{productid}",
		nil,
		true,
		product.GetProductByID,
	},
	Route{
		"UpdateProduct",
		false,
		"PUT",
		BaseAPI + "/products/update",
		nil,
		true,
		product.UpdateProduct,
	},
	Route{
		"DeleteProducts",
		false,
		"DELETE",
		BaseAPI + "/products/delete/{productid}",
		nil,
		true,
		product.DeleteProductByID,
	}, Route{
		"GetImages",
		false,
		"GET",
		BaseAPI + "/images",
		nil,
		true,
		product.GetProductImages,
	},
	Route{
		"AddImage",
		false,
		"POST",
		BaseAPI + "/images/add",
		nil,
		true,
		product.AddProductImage,
	},
	Route{
		"GetImageById",
		false,
		"GET",
		BaseAPI + "/images/show/{imageid}",
		nil,
		true,
		product.GetProductImageByID,
	},
	Route{
		"UpdateImage",
		false,
		"PUT",
		BaseAPI + "/images/update",
		nil,
		true,
		product.UpdateProductImage,
	},
	Route{
		"DeleteImages",
		false,
		"DELETE",
		BaseAPI + "/images/delete/{imageid}",
		nil,
		true,
		product.DeleteProductImageByID,
	},
	Route{
		"GetProductVariantes",
		false,
		"GET",
		BaseAPI + "/variantes",
		nil,
		true,
		product.GetProductVariantes,
	},
	Route{
		"AddProductVariante",
		false,
		"POST",
		BaseAPI + "/variantes/add",
		nil,
		true,
		product.AddProductVariante,
	},
	Route{
		"GetProductVarianteById",
		false,
		"GET",
		BaseAPI + "/variantes/show/{varianteid}",
		nil,
		true,
		product.GetProductVarianteByID,
	},
	Route{
		"UpdateProductVariante",
		false,
		"PUT",
		BaseAPI + "/variantes/update",
		nil,
		true,
		product.UpdateProductVariante,
	},
	Route{
		"DeleteProductVariantes",
		false,
		"DELETE",
		BaseAPI + "/variantes/delete/{varianteid}",
		nil,
		true,
		product.DeleteProductVarianteByID,
	},
	Route{
		"GetProductVarianteValues",
		false,
		"GET",
		BaseAPI + "/varianteValues",
		nil,
		true,
		product.GetProductVarianteValues,
	},
	Route{
		"AddProductVarianteValue",
		false,
		"POST",
		BaseAPI + "/varianteValues/add",
		nil,
		true,
		product.AddProductVarianteValue,
	},
	Route{
		"GetProductVarianteValueById",
		false,
		"GET",
		BaseAPI + "/varianteValues/show/{varianteValueid}",
		nil,
		true,
		product.GetProductVarianteValueByID,
	},
	Route{
		"UpdateProductVarianteValue",
		false,
		"PUT",
		BaseAPI + "/varianteValues/update",
		nil,
		true,
		product.UpdateProductVarianteValue,
	},
	Route{
		"DeleteProductVarianteValues",
		false,
		"DELETE",
		BaseAPI + "/varianteValues/delete/{varianteValueid}",
		nil,
		true,
		product.DeleteProductVarianteValueByID,
	},
	Route{
		"GetProductStocks",
		false,
		"GET",
		BaseAPI + "/stocks",
		nil,
		true,
		product.GetProductStocks,
	},
	Route{
		"AddProductStock",
		false,
		"POST",
		BaseAPI + "/stocks/add",
		nil,
		true,
		product.AddProductStock,
	},
	Route{
		"GetProductStockById",
		false,
		"GET",
		BaseAPI + "/stocks/show/{stockid}",
		nil,
		true,
		product.GetProductStockByID,
	},
	Route{
		"UpdateProductStock",
		false,
		"PUT",
		BaseAPI + "/stocks/update",
		nil,
		true,
		product.UpdateProductStock,
	},
	Route{
		"DeleteProductStocks",
		false,
		"DELETE",
		BaseAPI + "/stocks/delete/{stockid}",
		nil,
		true,
		product.DeleteProductStockByID,
	},
	Route{
		"GetProductPrices",
		false,
		"GET",
		BaseAPI + "/prices",
		nil,
		true,
		product.GetProductPrices,
	},
	Route{
		"AddProductPrice",
		false,
		"POST",
		BaseAPI + "/prices/add",
		nil,
		true,
		product.AddProductPrice,
	},
	Route{
		"GetProductPriceById",
		false,
		"GET",
		BaseAPI + "/prices/show/{priceid}",
		nil,
		true,
		product.GetProductPriceByID,
	},
	Route{
		"UpdateProductPrice",
		false,
		"PUT",
		BaseAPI + "/prices/update",
		nil,
		true,
		product.UpdateProductPrice,
	},
	Route{
		"DeleteProductPrices",
		false,
		"DELETE",
		BaseAPI + "/prices/delete/{priceid}",
		nil,
		true,
		product.DeleteProductPriceByID,
	},
}
